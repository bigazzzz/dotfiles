# Настройки текстовых редакторов
export EDITOR=vim
export LESS="-RFXig --tabs=4"

# подсветка файлов
eval "$(dircolors -b)"

# sharehistory - синхронизация истории между терминалами
# histignorealldups - не сохраняем в истории одинаковые команды
setopt histignorealldups sharehistory

# Сохраняем 10000 строк истории
HISTSIZE=10000
SAVEHIST=10000
HISTTIMEFORMAT="%Y-%m-%d %T "

# куда сохраняем?
HISTFILE=~/.zsh_history

# aliases
[ -f ~/.zshrc.aliases ] && source ~/.zshrc.aliases

# git config
git config --global merge.tool vscode
git config --global mergetool.vscode.cmd 'code --wait $MERGED'
git config --global diff.tool vscode
git config --global difftool.vscode.cmd 'code --wait --diff $LOCAL $REMOTE'

##  completions
#alias-finder plugin
zstyle ':omz:plugins:alias-finder' autoload yes # disabled by default
zstyle ':omz:plugins:alias-finder' longer yes # disabled by default
zstyle ':omz:plugins:alias-finder' exact yes # disabled by default
zstyle ':omz:plugins:alias-finder' cheaper yes # disabled by default
#kill & killall autocomplete
zstyle ':completion:*:processes' command 'ps -ax'
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;32'
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*'   force-list always

zstyle ':completion:*:processes-names' command 'ps -e -o comm='
zstyle ':completion:*:*:killall:*' menu yes select
zstyle ':completion:*:killall:*'   force-list always

# k8s
which kubectl &> /dev/null && source ~/.zshrc.kubectl
which helm &> /dev/null && source ~/.zshrc.helm
which bitenv &> /dev/null && source ~/.zshrc.bitenv
kubectl krew version &> /dev/null && export PATH="${PATH}:${HOME}/.krew/bin"

# paths
fpath=(~/.zsh/completion $fpath)
export PATH=$HOME/.local/bin:$PATH

[[ "$TERM_PROGRAM" == "vscode" ]] && . "$(code --locate-shell-integration-path zsh)"

# tmux feature
#if [ -z "$TMUX" ]
#then
#    tmux attach -t TMUX || tmux new -s TMUX
#fi

# password function
pswd() {
    if [ $# -eq 0 ];then
        SYMBOL_COUNT=22
    else
        SYMBOL_COUNT=${1}
    fi
    tr -cd '[:alnum:]' < /dev/urandom | fold -w ${SYMBOL_COUNT} | head -n1
}

x509_generate() {
    if [ $# -eq 0 ];then
        DOMAIN=example.org
    else
        DOMAIN=${1}
    fi
    openssl req -x509 -nodes -days 10000 -newkey rsa:2048 -keyout ${DOMAIN}.key -out ${DOMAIN}.crt -subj="/CN=${DOMAIN}"
}

x509_view() {
    if [ $# -eq 0 ];then
        echo "Need crt file" && exit 1
    fi
    openssl x509 -noout -text -in ${1}
}

x509_enddate(){
    if [ $# -eq 0 ];then
        echo "Need crt file" && exit 1
    fi
    openssl x509 -noout -enddate -in ${1}
}

x509_url() {
    if [ $# -eq 0 ];then
        echo "Need URL" && exit 1
    fi
    openssl s_client -showcerts -verify 5 -connect ${1} | openssl x509

}

## ssh agent
eval $(ssh-agent -s)

## server option
echo "Your last access was $(last|head -n2|tail -n1|sed 's/[^ ]\+ \+[^ ]\+ \+[^ ]\+ \+//;s/ *$//')"
